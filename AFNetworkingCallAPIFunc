//Get-Post
public static func callAPIPOST(strUrl: String, parameter: NSDictionary, success: ((NSDictionary) -> Void)?,
        error: ((NSError) -> Void)?) {    
        manager?.post(strUrl, parameters: parameter, success: { (opration, response) -> Void in                        
                        let dict: NSDictionary!
                        dict = response as! NSDictionary 
                        success? (dict)                        
        },failure: { (opration, error) -> Void in            
            print(error)      
        })
}

//For Image Upload
public static func callAPIPostWithImage(strUrl: String, parameter: NSDictionary, imageData: NSData, parameterName: String, fileName: String, mimeType: String, success: ((NSDictionary) -> Void)?, error: ((NSError) -> Void)? )
{   
  manager?.post(strUrl, parameters: parameter, constructingBodyWith: {(formData: AFMultipartFormData?) -> Void in formData?.appendPart(withFileData: imageData as Data!, name: parameterName, fileName: fileName, mimeType: mimeType)
  }, success: { (opration, response) -> Void in            
     let dict: NSDictionary!
     dict = response as! NSDictionary
     success? (dict)            
},failure: { (opration, error) -> Void in
   print(error)
  })        
}
open static func setAuthorizationHeaderField()
    {
        manager = AFHTTPSessionManager(baseURL: URL(string: URL))
        manager?.requestSerializer.setAuthorizationHeaderFieldWithUsername(LoginUserName, password: Password)
        manager?.requestSerializer.setValue("application/x-www-form-urlencoded", forHTTPHeaderField: "Content-Type")
        manager?.responseSerializer = AFJSONResponseSerializer(readingOptions: .allowFragments)
        manager?.responseSerializer.acceptableContentTypes = Set(["application/json", "text/json", "text/javascript", "text/html", "text/plain"])
    }
